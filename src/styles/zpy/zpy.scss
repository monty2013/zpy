/*
 * toplevel import for ZPY
 */

@use "dims";
@use "card";

@use "common/flex";
@use "common/rhythm";
@use "common/tooltip";

body {
  font-family: "Minion Pro", "Minion", "Trebuchet MS", "Trebuchet", sans-serif;
}

.board {
  @include flex.column;
}

///////////////////////////////////////////////////////////////////////////////

.round {
  position: relative;
  @include flex.row-center;
  align-items: flex-start;
}

.player-column {
  position: relative;
  @include flex.column;

  min-width: rhythm.rh(10);
  padding: rhythm.rh(1);

  > div {
    padding: rhythm.rh(0.5);
    @include rhythm.rh-margin-y(0.5);
  }
}

.player-info {
  position: relative;

  @include flex.row-center;
  justify-items: flex-start;

  &.current {
    @include rhythm.rh-border-full(0.5, 1rem / 8);
    border-radius: rhythm.rh(0.5);
    border-style: solid;
    border-color: green;
    background-color: rgba(51, 170, 51, 0.5);

    &.me {
      animation: pulse-current 5s infinite;
    }

    // the host icon is positioned relative to the padding-edge of its
    // parent, which changes depending on whether it has the "current" border
    > .host-wrapper {
      top: rhythm.rh(-0.875);
      left: rhythm.rh(0.875);
    }
  }

  // all tooltip icons are structured as:
  //
  //  <div class="foo-wrapper">
  //    <div aria-label="tooltip text>
  //      <img />
  //    </div>
  //  </div>
  //
  // this is because the tooltip div needs to be position: absolute, but we
  // often want to position the icon itself absolutely, so we need another
  // div wrapping the whole ensemble.
  > .host-wrapper {
    position: absolute;
    top: rhythm.rh(-0.75);
    left: rhythm.rh(1);
  }

  > .avatar {
    width: rhythm.rh(2.25);
    height: rhythm.rh(2.25);
    @include rhythm.rh-padding-x(0.5);
  }

  > .nick {
    @include rhythm.rh-padding-x(0.25);
  }

  > .nick-edit {
    border-width: rhythm.rh(0.125);
    border-style: inset;
    border-color: initial;

    @include rhythm.rh-padding-x(1/16);
    @include rhythm.rh-margin-x(1/16);

    font: inherit;
  }

  > .team-wrapper {
    @include rhythm.rh-padding-x(0.25);
  }
}

@keyframes pulse-current {
  0% {
    background-color: rgba(51, 170, 51, 0.5);
    border-color: green;
  }
  20% {
    background-color: rgba(51, 170, 51, 0.5);
    border-color: green;
  }
  50% {
    background-color: rgba(170, 51, 51, 0.5);
    border-color: red;
  }
  80% {
    background-color: rgba(51, 170, 51, 0.5);
    border-color: green;
  }
  0% {
    background-color: rgba(51, 170, 51, 0.5);
    border-color: green;
  }
}

.action-info {
  @include flex.column;
  justify-content: center;

  width: 100%;
  min-height: rhythm.rh(8);

  > .ready {
    padding: rhythm.rh(1);
    border-radius: rhythm.rh(4.5);
    background-color: rgba(51, 170, 51, 0.5);

    > img {
      width: rhythm.rh(4.5);
    }
  }

  > .play {
    position: relative;

    @include flex.column;
    justify-content: center;

    > .indicator-wrapper {
      position: absolute;
      top: -1 * rhythm.rh(1);
      right: -1 * rhythm.rh(1);
    }
  }
}

.score-info {
  @include flex.column;

  width: 100%;
  min-height: rhythm.rh(8);

  &::before {
    content: "";
    position: absolute;
    width: 100%;
    height: 1px;
    left: 0;
    background-image: linear-gradient(to right, transparent, #666, transparent);
  }

  > .rank {
    display: flex;
    justify-content: space-around;
    align-items: baseline;

    width: 100%;
    padding: rhythm.rh(0.5);

    font-size: rhythm.rh(0.75);
  }

  > .points {
    display: flex;
    justify-content: space-around;
    align-items: flex-start;

    width: 100%;
    padding: rhythm.rh(0.5);

    > .point-column {
      @include flex.column;
      padding-bottom: card.container-padding(0.5, card.height-for(card.$width-score));
    }
  }
}

.host, .indicator {
  width: rhythm.rh(2.25);
  height: rhythm.rh(2.25);
}
.team {
  width: rhythm.rh(1.125);
  height: rhythm.rh(1.125);

  // https://stackoverflow.com/questions/5804256/image-inside-div-has-extra-space-below-the-image
  vertical-align: middle;
}

.trump-indicator-wrapper {
  position: absolute;
  bottom: 0;
  right: 0;

  font-size: rhythm.rh(2);
}

.friend-indicator-wrapper {
  position: absolute;
  top: rhythm.rh(2.375);
  left: -1 * rhythm.rh(2.5);

  > .friend-indicator {
    @include flex.column;
    align-items: flex-end;

    > .friend {
      color: darkgrey;
      font-size: rhythm.rh(1);

      &.found {
        color: lightgrey;
        text-decoration: line-through;

        > .clubs, > .spades, > .diamonds, > .hearts, > .trump {
          color: lightgrey;
        }
      }
    }
  }
}

.clubs, .spades {
  color: black;
}
.diamonds, .hearts {
  color: red;
}
.trump {
  color: goldenrod;
}

///////////////////////////////////////////////////////////////////////////////

.action-container {
  position: relative;

  @include flex.column;

  min-width: card.$width-hand * 6;
  min-height: rhythm.rh(13);

  @include rhythm.rh-border-full(0.25);
  border-radius: rhythm.rh(0.5);
  border-style: solid;
  border-color: lightgrey;

  background-color: rgb(169, 191, 212);
}

.user-options {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;

  align-self: flex-end;

  padding: rhythm.rh(0.25);
}

.toggle {
  @include flex.row-center;

  @include rhythm.rh-border-full(0.25);
  @include rhythm.rh-margin-x(0.25);
  border-style: solid;
  border-radius: rhythm.rh(0.25);

  font-size: rhythm.rh(0.875);

  > .toggle-input {
    padding: rhythm.rh(0.25);
  }
  > .toggle-text {
    padding: rhythm.rh(0.25);
    user-select: none;
  }

  &.off {
    color: darkgrey;
    border-color: darkgrey;
    background-color: lightgrey;
  }
  &.on {
    border-color: rgba(67, 166, 226);
    background-color: skyblue;
  }
}

.action {
  @include flex.row-center;

  width: 100%;
  padding: rhythm.rh(0.25);

  &.draw {
    > .deck {
      @include flex.row-center;
      flex-basis: 45%;

      > .card:hover {
        cursor: pointer;
      }
    }

    > .bids {
      @include flex.row-center;
      flex-basis: 55%;
    }
  }
}

.cardarea {
  display: flex;
  overflow: auto;
  @include card.container-h(0.5, card.$width-hand);

  &.empty {
    padding-right: rhythm.rh(1);
  }
}

.cardarea-text {
  margin: rhythm.rh(0.25);

  color: dimgrey;
  text-align: center;
  user-select: none;
}

.card {
  @include flex.row-center;
}

$-card-height-friend: card.height-for(card.$width-friend);

/*
 * friend selector UI
 *
 * friend selection is the only action which requires a UI space taller than
 * the height of a card, so rather than pushing everything out of the way, just
 * position this overtop of the normal action area
 */
.friend-selector-container {
  position: absolute;
  @include flex.column;

  bottom: -1 * rhythm.$px;  // account for our parent's border

  width: card.fit(24, card.$width-friend);
  &.fsc-trump {
    width: card.fit(26, card.$width-friend);
  }

  @include rhythm.rh-border-full(2);
  padding-bottom: card.container-padding(2, $-card-height-friend) - rhythm.$px;
  // same values as .action-container
  border-radius: rhythm.rh(0.5);
  background-color: rgb(169, 191, 212);
}

.friend-selector-unit {
  display: flex;
  flex-wrap: wrap;

  @include card.container-h(0, card.$width-friend);
  padding-top: rhythm.rh(0.5);
  padding-bottom: rhythm.rh(0.5);
}

///////////////////////////////////////////////////////////////////////////////

kbd {
  // taken from MDN page about <kbd>
  background-color: #eee;
  border-radius: 3px;
  border: 1px solid #b4b4b4;
  box-shadow: 0 1px 1px rgba(0, 0, 0, .2), 0 2px 0 0 rgba(255, 255, 255, .7) inset;
  color: #333;
  display: inline-block;
  font-size: .85rem;
  font-weight: 700;
  line-height: 1;
  padding: 2px 4px;
  white-space: nowrap;
}

.instructions {
  padding: rhythm.rh(0.25);

  max-width: card.$width-hand * 6; // smaller than .action
  min-height: rhythm.rh(1.25);

  font-size: rhythm.rh(1);
  text-align: center;

  &.inactive {
    color: grey;
    font-style: italic;
  }
}

.hand {
  position: relative;
  @include flex.row-center;

  height: rhythm.rh(10);
  padding: rhythm.rh(1.5);
}

///////////////////////////////////////////////////////////////////////////////

/*
 * modal styles adapted from react-modal default styles
 */
.reveal-modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;

  @include flex.row-center;

  background-color: rgba(255, 255, 255, 0.75);
}
.reveal-modal-content {
  overflow: auto;
  padding: rhythm.rh(1);

  background: rgb(255, 255, 255);
  border: rhythm.$px solid rgb(204, 204, 204);
  border-radius: rhythm.rh(0.25);
  outline: none;
}

.reveal {
  @include flex.column;
  padding: rhythm.rh(1);

  > .reveal-desc {
    padding-top: rhythm.rh(1);
    padding-bottom: rhythm.rh(1);
    font-size: rhythm.rh(2);
  }
  > .reveal-multi {
    @include flex.row-center;
  }
}
.reveal-cards {
  @include flex.row-center;
  @include card.container-h(1, card.$width-hand, card.$clip * 1.5);
}

.error-wrapper {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;

  @include flex.row-center;

  pointer-events: none;
}

.error{
  padding: rhythm.rh(1);

  background-color: rgba(193, 66, 66, 0.9);
  border: rhythm.$px solid rgba(193, 66, 66, 1);
  border-radius: rhythm.rh(0.5);

  font-size: rhythm.rh(1.5);
}

@keyframes fadeinout {
  0% { opacity: 0; }
  10% { opacity: 1; }
  90% { opacity: 1; }
  100% { opacity: 0; }
}

///////////////////////////////////////////////////////////////////////////////

.help-wrapper {
  position: absolute;
  top: 0;
  right: 0;

  margin: rhythm.rh(0.5);

  > .help-info {
    display: none;
    opacity: 0;

    transition: opacity 0.5s linear;
  }
  &:hover > .help-info,
  &:focus > .help-info {
    display: block;
    opacity: 1;
  }
}

.help-icon {
  width: rhythm.rh(1.5);
  height: rhythm.rh(1.5);
  vertical-align: middle;
}

.help-info {
  position: fixed;
  top: 40%;
  left: 50%;
  transform: translate(-40%, -50%);
  z-index: 42;

  @include rhythm.rh-border-full(2.5);
  border-style: solid;
  border-color: black;
  border-radius: rhythm.rh(1);

  background-color: rgba(255, 255, 255, 0.75);
  backdrop-filter: blur(rhythm.rh(0.25));

  user-select: none;

  overflow: auto;

  > h2 {
    margin-top: 0;
  }
}

.help-shortcuts {
  display: grid;
  grid-template-columns: auto auto;
  grid-column-gap: 2rem;
}

.help-key > kbd {
  font-size: 1rem;
}

.help-pointer-icon {
  width: rhythm.rh(1.125);
  height: rhythm.rh(1.125);
  vertical-align: middle;
}
