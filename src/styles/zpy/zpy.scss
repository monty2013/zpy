/*
 * toplevel import for ZPY
 */

@use "dims";
@use "card";

@use "common/flex";
@use "common/rhythm";

body {
  font-family: "Minion Pro", "Minion", "Trebuchet MS", "Trebuchet", sans-serif;
}

.board {
  @include flex.column;
}

.round {
  @include flex.row-center;
  align-items: flex-start;
}

.player-column {
  position: relative;
  @include flex.column;

  @include rhythm.rh-padding();

  > div {
    @include rhythm.rh-padding-x(0.5);
    @include rhythm.rh-padding-y();
  }

  > .player-info {
    @include flex.row-center;
    justify-items: flex-start;

    &.current {
      @include rhythm.rh-border-full(0.5, 1rem / 8);
      border-radius: rhythm.rh(0.5);
      border-style: solid;
      border-color: green;
    }

    > .avatar {
      width: rhythm.rh(2.25);
      height: rhythm.rh(2.25);
      @include rhythm.rh-padding-x(0.25);
    }

    > .nick {
      @include rhythm.rh-padding-x(0.25);
    }
  }

  > .action-info {
    width: 100%;
    min-height: rhythm.rh(10);

    @include flex.column;
  }

  > .score-info {
    width: 100%;
    min-height: rhythm.rh(8);

    &::before {
      content: "";
      width: 100%;
      height: 1px;
      position: absolute;
      left: 0;
      background-image: linear-gradient(to right, transparent, #666, transparent);
    }
  }
}

.hand {
  height: rhythm.rh(10);

  @include flex.row-center;
  position: relative;

  @include rhythm.rh-padding();

  &::after {
    content: "[hand]";

    position: absolute;
    bottom: 0;
    right: 0;

    opacity: 0;
    transition: all ease-in 4s;
  }
  &:hover::after {
    opacity: 1;
    transition: all 0s;
  }
}

.action {
  min-width: card.$def-width * 6;
  height: rhythm.rh(10);
  background-color: rgb(169, 191, 212);

  @include flex.row-center;

  @include rhythm.rh-border-full();
  border-radius: rhythm.rh(0.5);
  border-style: solid;
  border-color: lightgrey;

  &.draw {
    > .deck {
      @include flex.row-center;
      flex-basis: 40%;

      > .card:hover {
        cursor: pointer;
      }
    }

    > .bids {
      @include flex.row-center;
      flex-basis: 60%;
    }
  }
}

.cardarea {
  display: flex;
  overflow: auto;
  padding: rhythm.rh(1);
  padding-right: rhythm.rh(1) + 0.75 * card.$def-width;

  &.empty {
    padding-right: rhythm.rh(1);
  }
}
